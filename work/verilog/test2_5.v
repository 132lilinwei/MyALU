/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module test2_5 (
    input clk,
    input rst,
    input [7:0] result_to_check,
    input z_to_check,
    input v_to_check,
    input n_to_check,
    output reg [7:0] a,
    output reg [7:0] b,
    output reg [5:0] alufn,
    output reg pass
  );
  
  
  
  localparam FORCE_myFsm = 4'd0;
  localparam ADD_myFsm = 4'd1;
  localparam SUB_myFsm = 4'd2;
  localparam MUL_myFsm = 4'd3;
  localparam AND_myFsm = 4'd4;
  localparam OR_myFsm = 4'd5;
  localparam XOR_myFsm = 4'd6;
  localparam LDR_myFsm = 4'd7;
  localparam SHL_myFsm = 4'd8;
  localparam SHR_myFsm = 4'd9;
  localparam SRA_myFsm = 4'd10;
  localparam RL_myFsm = 4'd11;
  localparam RR_myFsm = 4'd12;
  localparam CMPEQ_myFsm = 4'd13;
  localparam CMPLT_myFsm = 4'd14;
  localparam CMPLE_myFsm = 4'd15;
  
  reg [3:0] M_myFsm_d, M_myFsm_q = FORCE_myFsm;
  wire [1-1:0] M_blin_check;
  fastblinker_8 blin (
    .clk(clk),
    .rst(rst),
    .check(M_blin_check)
  );
  
  always @* begin
    M_myFsm_d = M_myFsm_q;
    
    a = 8'h00;
    b = 8'h00;
    alufn = 6'h00;
    pass = 1'h0;
    if (M_myFsm_q == ADD_myFsm) begin
      alufn = 6'h00;
      a = 8'hff;
      b = 8'h80;
      if (z_to_check == 1'h0 && v_to_check == 1'h1 && n_to_check == 1'h0 && result_to_check == 8'h7f) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SUB_myFsm;
      end
    end
    if (M_myFsm_q == SUB_myFsm) begin
      alufn = 6'h01;
      a = 8'hff;
      b = 8'h80;
      if (z_to_check == 1'h0 && v_to_check == 1'h0 && n_to_check == 1'h0 && result_to_check == 8'h7f) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = MUL_myFsm;
      end
    end
    if (M_myFsm_q == MUL_myFsm) begin
      alufn = 6'h02;
      a = 8'h03;
      b = 8'h03;
      if (result_to_check == 8'h09) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = AND_myFsm;
      end
    end
    if (M_myFsm_q == AND_myFsm) begin
      alufn = 6'h18;
      a = 8'h93;
      b = 8'h83;
      if (result_to_check == 8'h83) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = OR_myFsm;
      end
    end
    if (M_myFsm_q == OR_myFsm) begin
      alufn = 6'h1e;
      a = 8'h57;
      b = 8'hab;
      if (result_to_check == 8'hff) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = XOR_myFsm;
      end
    end
    if (M_myFsm_q == XOR_myFsm) begin
      alufn = 6'h16;
      a = 8'h57;
      b = 8'hab;
      if (result_to_check == 8'hfc) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = LDR_myFsm;
      end
    end
    if (M_myFsm_q == LDR_myFsm) begin
      alufn = 6'h1a;
      a = 8'h57;
      b = 8'hab;
      if (result_to_check == 8'h57) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SHL_myFsm;
      end
    end
    if (M_myFsm_q == SHL_myFsm) begin
      alufn = 6'h20;
      a = 8'h57;
      b = 8'h03;
      if (result_to_check == 8'hb8) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SHR_myFsm;
      end
    end
    if (M_myFsm_q == SHR_myFsm) begin
      alufn = 6'h21;
      a = 8'h57;
      b = 8'h03;
      if (result_to_check == 8'h0a) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SRA_myFsm;
      end
    end
    if (M_myFsm_q == SRA_myFsm) begin
      alufn = 6'h23;
      a = 8'h97;
      b = 8'h02;
      if (result_to_check == 8'he5) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = RL_myFsm;
      end
    end
    if (M_myFsm_q == RL_myFsm) begin
      alufn = 6'h24;
      a = 8'hcb;
      b = 8'h02;
      if (result_to_check == 8'h2f) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = RR_myFsm;
      end
    end
    if (M_myFsm_q == RR_myFsm) begin
      alufn = 6'h25;
      a = 8'h57;
      b = 8'h02;
      if (result_to_check == 8'hd5) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPEQ_myFsm;
      end
    end
    if (M_myFsm_q == CMPEQ_myFsm) begin
      alufn = 6'h33;
      a = 8'h82;
      b = 8'h02;
      if (result_to_check == 8'h00) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPLT_myFsm;
      end
    end
    if (M_myFsm_q == CMPLT_myFsm) begin
      alufn = 6'h35;
      a = 8'h82;
      b = 8'h02;
      if (result_to_check == 8'h01) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPLE_myFsm;
      end
    end
    if (M_myFsm_q == CMPLE_myFsm) begin
      alufn = 6'h37;
      a = 8'h82;
      b = 8'h02;
      if (result_to_check == 8'h01) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = FORCE_myFsm;
      end
    end
    if (M_myFsm_q == FORCE_myFsm) begin
      alufn = 6'h24;
      a = 8'h82;
      b = 8'h09;
      if (result_to_check == 8'h05) begin
        pass = 1'h1;
      end
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = ADD_myFsm;
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_myFsm_q <= 1'h0;
    end else begin
      M_myFsm_q <= M_myFsm_d;
    end
  end
  
endmodule
