/*
   This file was generated automatically by the Mojo IDE version B1.3.6.
   Do not edit this file directly. Instead edit the original Lucid source.
   This is a temporary file and any changes made to it will be destroyed.
*/

module test_4 (
    input clk,
    input rst,
    output reg [7:0] a,
    output reg [7:0] b,
    output reg [5:0] alufn,
    output reg [3:0] mode_code
  );
  
  
  
  localparam CMPLE_myFsm = 4'd0;
  localparam ADD_myFsm = 4'd1;
  localparam SUB_myFsm = 4'd2;
  localparam MUL_myFsm = 4'd3;
  localparam AND_myFsm = 4'd4;
  localparam OR_myFsm = 4'd5;
  localparam XOR_myFsm = 4'd6;
  localparam LDR_myFsm = 4'd7;
  localparam SHL_myFsm = 4'd8;
  localparam SHR_myFsm = 4'd9;
  localparam SRA_myFsm = 4'd10;
  localparam RL_myFsm = 4'd11;
  localparam RR_myFsm = 4'd12;
  localparam CMPEQ_myFsm = 4'd13;
  localparam CMPLT_myFsm = 4'd14;
  
  reg [3:0] M_myFsm_d, M_myFsm_q = CMPLE_myFsm;
  wire [3-1:0] M_blin_aa;
  wire [3-1:0] M_blin_bb;
  wire [1-1:0] M_blin_check;
  blinker_7 blin (
    .clk(clk),
    .rst(rst),
    .aa(M_blin_aa),
    .bb(M_blin_bb),
    .check(M_blin_check)
  );
  
  always @* begin
    M_myFsm_d = M_myFsm_q;
    
    a = 8'h00;
    b = 8'h00;
    alufn = 6'h00;
    mode_code = 4'hf;
    if (M_myFsm_q == ADD_myFsm || M_myFsm_q == SUB_myFsm || M_myFsm_q == AND_myFsm || M_myFsm_q == OR_myFsm || M_myFsm_q == XOR_myFsm || M_myFsm_q == LDR_myFsm || M_myFsm_q == CMPEQ_myFsm || M_myFsm_q == CMPLT_myFsm || M_myFsm_q == CMPLE_myFsm) begin
      a[5+2-:3] = M_blin_aa;
      b[5+2-:3] = M_blin_bb;
      a[0+4-:5] = 5'h1f;
      b[0+4-:5] = 5'h1f;
    end else begin
      a[5+2-:3] = M_blin_aa;
      a[0+4-:5] = 5'h1f;
      b[0+2-:3] = M_blin_bb;
      b[3+4-:5] = 5'h00;
    end
    if (M_myFsm_q == ADD_myFsm) begin
      alufn = 6'h00;
      mode_code = 1'h0;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SUB_myFsm;
      end
    end
    if (M_myFsm_q == SUB_myFsm) begin
      alufn = 6'h01;
      mode_code = 1'h1;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = MUL_myFsm;
      end
    end
    if (M_myFsm_q == MUL_myFsm) begin
      alufn = 6'h02;
      mode_code = 2'h2;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = AND_myFsm;
      end
    end
    if (M_myFsm_q == AND_myFsm) begin
      alufn = 6'h18;
      mode_code = 2'h3;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = OR_myFsm;
      end
    end
    if (M_myFsm_q == OR_myFsm) begin
      alufn = 6'h1e;
      mode_code = 3'h4;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = XOR_myFsm;
      end
    end
    if (M_myFsm_q == XOR_myFsm) begin
      alufn = 6'h16;
      mode_code = 3'h5;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = LDR_myFsm;
      end
    end
    if (M_myFsm_q == LDR_myFsm) begin
      alufn = 6'h1a;
      mode_code = 3'h6;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SHL_myFsm;
      end
    end
    if (M_myFsm_q == SHL_myFsm) begin
      alufn = 6'h20;
      mode_code = 3'h7;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SHR_myFsm;
      end
    end
    if (M_myFsm_q == SHR_myFsm) begin
      alufn = 6'h21;
      mode_code = 4'h8;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = SRA_myFsm;
      end
    end
    if (M_myFsm_q == SRA_myFsm) begin
      alufn = 6'h23;
      mode_code = 4'h9;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = RL_myFsm;
      end
    end
    if (M_myFsm_q == RL_myFsm) begin
      alufn = 6'h24;
      mode_code = 4'ha;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = RR_myFsm;
      end
    end
    if (M_myFsm_q == RR_myFsm) begin
      alufn = 6'h25;
      mode_code = 4'hb;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPEQ_myFsm;
      end
    end
    if (M_myFsm_q == CMPEQ_myFsm) begin
      alufn = 6'h33;
      mode_code = 4'hc;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPLT_myFsm;
      end
    end
    if (M_myFsm_q == CMPLT_myFsm) begin
      alufn = 6'h35;
      mode_code = 4'hd;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = CMPLE_myFsm;
      end
    end
    if (M_myFsm_q == CMPLE_myFsm) begin
      alufn = 6'h37;
      mode_code = 4'he;
      if (M_blin_check == 1'h0) begin
        M_myFsm_d = ADD_myFsm;
      end
    end
  end
  
  always @(posedge clk) begin
    if (rst == 1'b1) begin
      M_myFsm_q <= 1'h0;
    end else begin
      M_myFsm_q <= M_myFsm_d;
    end
  end
  
endmodule
