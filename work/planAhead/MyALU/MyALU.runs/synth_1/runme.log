
*** Running xst
    with args -ifn "mojo_top_0.xst" -ofn "mojo_top_0.srp" -intstyle ise

Reading design: mojo_top_0.prj

=========================================================================
*                          HDL Parsing                                  *
=========================================================================
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/fastblinker_8.v" into library work
Parsing module <fastblinker_8>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/blinker_7.v" into library work
Parsing module <blinker_7>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/test_4.v" into library work
Parsing module <test_4>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/test2_5.v" into library work
Parsing module <test2_5>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/reset_conditioner_2.v" into library work
Parsing module <reset_conditioner_2>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/myEdge_detector_3.v" into library work
Parsing module <myEdge_detector_3>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/ledhelper_1.v" into library work
Parsing module <ledhelper_1>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/aluCompute_6.v" into library work
Parsing module <aluCompute_6>.
Analyzing Verilog file "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/mojo_top_0.v" into library work
Parsing module <mojo_top_0>.

=========================================================================
*                            HDL Elaboration                            *
=========================================================================

Elaborating module <mojo_top_0>.

Elaborating module <ledhelper_1>.

Elaborating module <reset_conditioner_2>.

Elaborating module <myEdge_detector_3>.

Elaborating module <test_4>.

Elaborating module <blinker_7>.

Elaborating module <test2_5>.

Elaborating module <fastblinker_8>.

Elaborating module <aluCompute_6>.

=========================================================================
*                           HDL Synthesis                               *
=========================================================================

Synthesizing Unit <mojo_top_0>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/mojo_top_0.v".
WARNING:Xst:647 - Input <io_button<4:1>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
WARNING:Xst:647 - Input <io_dip<17:16>> is never used. This port will be preserved and left unconnected if it belongs to a top-level block or it belongs to a sub-block and the hierarchy of this sub-block is preserved.
    Found 2-bit register for signal <M_version_q>.
    Found finite state machine <FSM_0> for signal <M_version_q>.
    -----------------------------------------------------------------------
    | States             | 3                                              |
    | Transitions        | 6                                              |
    | Inputs             | 1                                              |
    | Outputs            | 2                                              |
    | Clock              | clk (rising_edge)                              |
    | Reset              | M_reset_cond_out (positive)                    |
    | Reset type         | synchronous                                    |
    | Reset State        | 00                                             |
    | Power Up State     | 00                                             |
    | Encoding           | auto                                           |
    | Implementation     | LUT                                            |
    -----------------------------------------------------------------------
    Found 1-bit tristate buffer for signal <spi_miso> created at line 105
    Found 1-bit tristate buffer for signal <spi_channel<3>> created at line 105
    Found 1-bit tristate buffer for signal <spi_channel<2>> created at line 105
    Found 1-bit tristate buffer for signal <spi_channel<1>> created at line 105
    Found 1-bit tristate buffer for signal <spi_channel<0>> created at line 105
    Found 1-bit tristate buffer for signal <avr_rx> created at line 105
    Found 8-bit comparator greater for signal <GND_1_o_io_dip[7]_LessThan_10_o> created at line 145
    Summary:
	inferred   1 Comparator(s).
	inferred  23 Multiplexer(s).
	inferred   6 Tristate(s).
	inferred   1 Finite State Machine(s).
Unit <mojo_top_0> synthesized.

Synthesizing Unit <ledhelper_1>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/ledhelper_1.v".
    Found 16x8-bit Read Only RAM for signal <led>
    Summary:
	inferred   1 RAM(s).
Unit <ledhelper_1> synthesized.

Synthesizing Unit <reset_conditioner_2>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/reset_conditioner_2.v".
    Found 4-bit register for signal <M_stage_q>.
    Summary:
	inferred   4 D-type flip-flop(s).
Unit <reset_conditioner_2> synthesized.

Synthesizing Unit <myEdge_detector_3>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/myEdge_detector_3.v".
    Found 1-bit register for signal <M_last_q>.
    Summary:
	inferred   1 D-type flip-flop(s).
Unit <myEdge_detector_3> synthesized.

Synthesizing Unit <test_4>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/test_4.v".
    Found 4-bit register for signal <M_myFsm_q>.
    Found 16x10-bit Read Only RAM for signal <_n0177>
    Summary:
	inferred   1 RAM(s).
	inferred   4 D-type flip-flop(s).
	inferred  31 Multiplexer(s).
Unit <test_4> synthesized.

Synthesizing Unit <blinker_7>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/blinker_7.v".
    Found 29-bit register for signal <M_counter_q>.
    Found 29-bit adder for signal <M_counter_d> created at line 28.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  29 D-type flip-flop(s).
Unit <blinker_7> synthesized.

Synthesizing Unit <test2_5>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/test2_5.v".
    Found 4-bit register for signal <M_myFsm_q>.
    Found 16x8-bit Read Only RAM for signal <a>
    Found 16x8-bit Read Only RAM for signal <b>
    Found 16x6-bit Read Only RAM for signal <alufn>
    Summary:
	inferred   3 RAM(s).
	inferred   4 D-type flip-flop(s).
	inferred  63 Multiplexer(s).
Unit <test2_5> synthesized.

Synthesizing Unit <fastblinker_8>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/fastblinker_8.v".
    Found 25-bit register for signal <M_counter_q>.
    Found 25-bit adder for signal <M_counter_d> created at line 24.
    Summary:
	inferred   1 Adder/Subtractor(s).
	inferred  25 D-type flip-flop(s).
Unit <fastblinker_8> synthesized.

Synthesizing Unit <aluCompute_6>.
    Related source file is "C:/Users/Henry Lee/Desktop/MyALU/work/planAhead/MyALU/MyALU.srcs/sources_1/imports/verilog/aluCompute_6.v".
    Found 8-bit subtractor for signal <GND_9_o_b[7]_sub_44_OUT> created at line 98.
    Found 9-bit adder for signal <n0085> created at line 41.
    Found 9-bit adder for signal <n0098> created at line 43.
    Found 9-bit adder for signal <GND_9_o_GND_9_o_add_4_OUT> created at line 43.
    Found 8x8-bit multiplier for signal <n0065> created at line 64.
    Found 8-bit shifter logical left for signal <a[7]_b[7]_shift_left_11_OUT> created at line 79
    Found 8-bit shifter logical right for signal <a[7]_b[7]_shift_right_12_OUT> created at line 82
    Found 8-bit shifter arithmetic right for signal <a[7]_b[7]_shift_right_13_OUT> created at line 85
    Found 8-bit shifter logical right for signal <a[7]_GND_9_o_shift_right_44_OUT> created at line 98
    Found 8-bit shifter logical left for signal <a[7]_GND_9_o_shift_left_50_OUT> created at line 101
    Summary:
	inferred   1 Multiplier(s).
	inferred   3 Adder/Subtractor(s).
	inferred  10 Multiplexer(s).
	inferred   5 Combinational logic shifter(s).
Unit <aluCompute_6> synthesized.

=========================================================================
HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 5
 16x10-bit single-port Read Only RAM                   : 1
 16x6-bit single-port Read Only RAM                    : 1
 16x8-bit single-port Read Only RAM                    : 3
# Multipliers                                          : 1
 8x8-bit multiplier                                    : 1
# Adders/Subtractors                                   : 5
 25-bit adder                                          : 1
 29-bit adder                                          : 1
 8-bit subtractor                                      : 1
 9-bit adder                                           : 2
# Registers                                            : 6
 1-bit register                                        : 1
 25-bit register                                       : 1
 29-bit register                                       : 1
 4-bit register                                        : 3
# Comparators                                          : 1
 8-bit comparator greater                              : 1
# Multiplexers                                         : 127
 1-bit 2-to-1 multiplexer                              : 48
 4-bit 2-to-1 multiplexer                              : 63
 6-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 13
 9-bit 2-to-1 multiplexer                              : 2
# Logic shifters                                       : 5
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 2
 8-bit shifter logical right                           : 2
# Tristates                                            : 6
 1-bit tristate buffer                                 : 6
# FSMs                                                 : 1
# Xors                                                 : 2
 8-bit xor2                                            : 2

=========================================================================
INFO:Xst:1767 - HDL ADVISOR - Resource sharing has identified that some arithmetic operations in this design can share the same physical resources for reduced device utilization. For improved clock frequency you may try to disable resource sharing.

=========================================================================
*                       Advanced HDL Synthesis                          *
=========================================================================


Synthesizing (advanced) Unit <blinker_7>.
The following registers are absorbed into counter <M_counter_q>: 1 register on signal <M_counter_q>.
Unit <blinker_7> synthesized (advanced).

Synthesizing (advanced) Unit <fastblinker_8>.
The following registers are absorbed into counter <M_counter_q>: 1 register on signal <M_counter_q>.
Unit <fastblinker_8> synthesized (advanced).

Synthesizing (advanced) Unit <ledhelper_1>.
INFO:Xst:3218 - HDL ADVISOR - The RAM <Mram_led> will be implemented on LUTs either because you have described an asynchronous read or because of currently unsupported block RAM features. If you have described an asynchronous read, making it synchronous would allow you to take advantage of available block RAM resources, for optimized device usage and improved timings. Please refer to your documentation for coding guidelines.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <num>           |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <led>           |          |
    -----------------------------------------------------------------------
Unit <ledhelper_1> synthesized (advanced).

Synthesizing (advanced) Unit <test2_5>.
INFO:Xst:3231 - The small RAM <Mram_a> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_myFsm_q>     |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <a>             |          |
    -----------------------------------------------------------------------
INFO:Xst:3231 - The small RAM <Mram_alufn> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 6-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_myFsm_q>     |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <alufn>         |          |
    -----------------------------------------------------------------------
INFO:Xst:3231 - The small RAM <Mram_b> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 8-bit                     |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_myFsm_q>     |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to signal <b>             |          |
    -----------------------------------------------------------------------
Unit <test2_5> synthesized (advanced).

Synthesizing (advanced) Unit <test_4>.
INFO:Xst:3231 - The small RAM <Mram__n0177> will be implemented on LUTs in order to maximize performance and save block RAM resources. If you want to force its implementation on block, use option/constraint ram_style.
    -----------------------------------------------------------------------
    | ram_type           | Distributed                         |          |
    -----------------------------------------------------------------------
    | Port A                                                              |
    |     aspect ratio   | 16-word x 10-bit                    |          |
    |     weA            | connected to signal <GND>           | high     |
    |     addrA          | connected to signal <M_myFsm_q>     |          |
    |     diA            | connected to signal <GND>           |          |
    |     doA            | connected to internal node          |          |
    -----------------------------------------------------------------------
Unit <test_4> synthesized (advanced).

=========================================================================
Advanced HDL Synthesis Report

Macro Statistics
# RAMs                                                 : 5
 16x10-bit single-port distributed Read Only RAM       : 1
 16x6-bit single-port distributed Read Only RAM        : 1
 16x8-bit single-port distributed Read Only RAM        : 3
# Multipliers                                          : 1
 8x8-bit multiplier                                    : 1
# Adders/Subtractors                                   : 3
 8-bit adder                                           : 1
 8-bit subtractor                                      : 1
 9-bit adder                                           : 1
# Counters                                             : 2
 25-bit up counter                                     : 1
 29-bit up counter                                     : 1
# Registers                                            : 13
 Flip-Flops                                            : 13
# Comparators                                          : 1
 8-bit comparator greater                              : 1
# Multiplexers                                         : 127
 1-bit 2-to-1 multiplexer                              : 48
 4-bit 2-to-1 multiplexer                              : 63
 6-bit 2-to-1 multiplexer                              : 1
 8-bit 2-to-1 multiplexer                              : 13
 9-bit 2-to-1 multiplexer                              : 2
# Logic shifters                                       : 5
 8-bit shifter arithmetic right                        : 1
 8-bit shifter logical left                            : 2
 8-bit shifter logical right                           : 2
# FSMs                                                 : 1
# Xors                                                 : 2
 8-bit xor2                                            : 2

=========================================================================

=========================================================================
*                         Low Level Synthesis                           *
=========================================================================
Analyzing FSM <MFsm> for best encoding.
Optimizing FSM <FSM_0> on signal <M_version_q[1:2]> with user encoding.
-------------------
 State | Encoding
-------------------
 00    | 00
 01    | 01
 10    | 10
-------------------

Optimizing unit <mojo_top_0> ...

Optimizing unit <test_4> ...

Optimizing unit <test2_5> ...

Optimizing unit <aluCompute_6> ...
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_10> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_10> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_11> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_11> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_12> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_12> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_13> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_13> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_14> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_14> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_20> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_20> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_15> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_15> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_21> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_21> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_16> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_16> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_22> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_22> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_17> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_17> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_23> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_23> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_18> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_18> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_24> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_24> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_19> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_19> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_0> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_0> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_1> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_1> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_2> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_2> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_3> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_3> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_4> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_4> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_5> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_5> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_6> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_6> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_7> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_7> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_8> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_8> 
INFO:Xst:2261 - The FF/Latch <myAutoTester/blin/M_counter_q_9> in Unit <mojo_top_0> is equivalent to the following FF/Latch, which will be removed : <myAutoTester2/blin/M_counter_q_9> 

Mapping all equations...
Building and optimizing final netlist ...
Found area constraint ratio of 100 (+ 0) on block mojo_top_0, actual ratio is 7.

Final Macro Processing ...

Processing Unit <mojo_top_0> :
INFO:Xst:741 - HDL ADVISOR - A 4-bit shift register was found for signal <reset_cond/M_stage_q_3> and currently occupies 4 logic cells (2 slices). Removing the set/reset logic would take advantage of SRL32 (and derived) primitives and reduce this to 1 logic cells (1 slices). Evaluate if the set/reset can be removed for this simple shift register. The majority of simple pipeline structures do not need to be set/reset operationally.
Unit <mojo_top_0> processed.

=========================================================================
Final Register Report

Macro Statistics
# Registers                                            : 44
 Flip-Flops                                            : 44

=========================================================================

=========================================================================
*                           Partition Report                            *
=========================================================================

Partition Implementation Status
-------------------------------

  No Partitions were found in this design.

-------------------------------

=========================================================================
*                            Design Summary                             *
=========================================================================

Clock Information:
------------------
-----------------------------------+------------------------+-------+
Clock Signal                       | Clock buffer(FF name)  | Load  |
-----------------------------------+------------------------+-------+
clk                                | BUFGP                  | 44    |
-----------------------------------+------------------------+-------+

Asynchronous Control Signals Information:
----------------------------------------
No asynchronous control signals found in this design

Timing Summary:
---------------
Speed Grade: -2

   Minimum period: 4.548ns (Maximum Frequency: 219.877MHz)
   Minimum input arrival time before clock: 3.526ns
   Maximum output required time after clock: 22.575ns
   Maximum combinational path delay: 20.914ns

=========================================================================
